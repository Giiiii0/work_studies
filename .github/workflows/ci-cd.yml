name: Test and Terraform Plan

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      test_path:
        description: 'Path to the test folder'
        required: true
        default: 'python-code/tests'
      terraform_path:
        description: 'Path to the Terraform folder'
        required: true
        default: 'terraform-code'

jobs:
  test-and-plan:
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write  # ✅ Added this to allow commenting on PR
      
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    # ✅ Define Terraform Path Once (For Reusability)
    - name: Set Terraform Path
      run: echo "TERRAFORM_DIR=${{ inputs.terraform_path || 'terraform-code' }}" >> $GITHUB_ENV

    # Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    # Add environment variables
    - name: Set OpenAI API Key
      run: echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV

    # Install Python dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio

    # Run pytest
    - name: Run Python Tests
      run: pytest ${{ inputs.test_path || 'python-code/tests' }}

    # Set up Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: '1.10.5'
    
    # ✅ Configure AWS Credentials
    - name: Configure AWS Credentials
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
        echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV

    # Generate SSH key pair for Terraform
    - name: Generate SSH Key
      run: |
        ssh-keygen -t rsa -b 4096 -f $TERRAFORM_DIR/my-terraform-key -N ""

    # Initialize Terraform
    - name: Terraform Init
      run: |
        cd $TERRAFORM_DIR
        terraform init

    # Run Terraform Plan and output to PR
    - name: Terraform Plan
      run: |
        cd $TERRAFORM_DIR
        terraform plan -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
                       -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
                       -var="aws_region=${{ secrets.AWS_REGION }}" \
                       -out=tfplan
        terraform show -json tfplan > plan.json

    # Add Terraform Plan output to PR
    - name: Comment Terraform Plan on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');

          // Read the Terraform Plan output
          const planPath = process.env.TERRAFORM_DIR + '/plan.json';
          let plan = fs.readFileSync(planPath, 'utf8');

          // Mask sensitive values
          plan = plan.replace(/"aws_access_key":\{"value":"(.*?)"\}/g, '"aws_access_key":{"value":"***MASKED***"}');
          plan = plan.replace(/"aws_secret_key":\{"value":"(.*?)"\}/g, '"aws_secret_key":{"value":"***MASKED***"}');

          if (!context.payload.pull_request) {
            console.log("Skipping PR comment - not a pull request event.");
            return;
          }

          github.rest.issues.createComment({
            issue_number: context.payload.pull_request.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `### Terraform Plan Output\n\`\`\`json\n${plan}\n\`\`\``
          });


  # ✅ Stage 2: Deploy on Merge to Main
  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test-and-plan  # Ensure PR checks passed before applying
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # ✅ Apply Terraform Changes Only
      - name: Terraform Apply
        run: |
          cd terraform-code  # No need for $TERRAFORM_DIR since it's fixed here
          terraform apply -auto-approve